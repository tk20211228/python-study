# 【リストとジェネレータのメモリ使用量】

import sys  # sysモジュールをインポートします。このモジュールには、Pythonインタープリタに関する情報が含まれています。

list_a = [i for i in range(100000)]  # 0から99999までの整数を要素に持つリストを作成します。
def num(max):  # numという名前のジェネレータ関数を定義します。この関数は0からmax-1までの整数を順に生成します。
    i = 0
    while i < max:
        yield i  # yield文を使って整数を生成します。
        i += 1

# for i in num(100000):  # このコメントアウトされたコードは、ジェネレータ関数numを使って0から99999までの整数を順に出力する例です。
#     print(i)

gen = num(100000)  # numジェネレータを作成します。このジェネレータは0から99999までの整数を順に生成します。
print(sys.getsizeof(list_a))  # リストlist_aのメモリ使用量を出力します。
print(sys.getsizeof(gen))  # ジェネレータgenのメモリ使用量を出力します。

# 【実行結果】
# リストのメモリ使用量: 900112
# ジェネレータのメモリ使用量: 120
# この結果から、ジェネレータはリストに比べてメモリ使用量が非常に少ないことがわかります。これは、ジェネレータが要素を一度にすべて生成するのではなく、必要になったときに順に生成するためです。
